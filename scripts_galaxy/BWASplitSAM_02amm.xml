<tool id="base_BWASplitSam" name="BWA Split Sam" version="0.1.0" python_template_version="3.5">
    <description>takes a SAM file and subsets it based on the values of the SAM flags</description>
    <macros>
      <import>../macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command><![CDATA[
        python3 BWASplitSAM_SEonly.py3 
          #if str( $ input_type.input_type_selector ) == "single_collection":  or str( $input_type.input_type_selector ) -- "single_collection":
            '${input_type.fq1}'
           --sam=$sam
          
          --fq1=$fq1
          --map=$map
          --opp=$opp
          --amb=$amb
          --chi=$chi
          --notp=$notp
          --unmap_read=$unmap_read
          --amb_read=$amb_read
          --summ=$summ
]]>
    </command>
    <inputs>
        <conditional name="input_type">
            <param name="input_type_selector" type="select" label="Select input type" help="Select between single and collection"
                <option value="single">Running single FQ</option>
                <option value="single collection">Running collection</option>
            </param>
            <when value="single">
                <param name="fq1" type="data" format="fastq" label="FQ1 file" help="Select the FastQ file used to generate the above SAM file" />
                <param name="sam" type="data" format="sam" label="SAM file" help="Select the SAM file for subsetting"/>
            </when>
            <when value="single collection">
                <param name="fq1" type="data_collection" format="fastq" label="FQ1 file" help="Select the FastQ file collecction used to generate the above SAM file" />
                <param name="sam" type="data_collection" format="sam" label="SAM file" help="Select the SAM file collection for subsetting"/>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data format="sam" name="map" label="${tool.name} on ${on_string}: BWASplitSAM mapped"/>
        <data format="sam" name="opp" label="${tool.name} on ${on_string}: BWASplitSAM opposite"/>
        <data format="sam" name="amb" label="${tool.name} on ${on_string}: BWASplitSAM ambiguous"/>
        <data format="sam" name="chi" label="${tool.name} on ${on_string}: BWASplitSAM chimeric"/>
        <data format="sam" name="notp" label="${tool.name} on ${on_string}: BWASplitSAM not primary"/>
        <data format="fastq" name="unmap_read" label="${tool.name} on ${on_string}: BWASplitSAM unmapped reads"/>
        <data format="fastq" name="amb_read" label="${tool.name} on ${on_string}: BWASplitSAM ambiguous reads"/>
        <data format="tabular" name="summ" label="${tool.name} on ${on_string}: BWASplitSAM summary file"/>
    </outputs>
    <help><![CDATA[
**Tool Description**    

This tool subsets a SAM file based on values in the Flag column of the SAM file.  
**NOTE:  SAM file must be generated from a SE alignment using BWA-MEM!**

**Input**

    (1) A SAM file generated from a SE alignment.
    (2) The FQ file used to generate the SAM file

**Output**

The following SAM files are generated based on the SAM flag values in the starting SAM file: 

(1) **mapped.sam**       Contains uniquely mapping reads on forward strand
(2) **unmapped.sam**     Contains reads that do not align
(3) **opposite.sam**     Contains uniquely mapping on reverse strand
(4) **ambiguous.sam**    Reads that do not uniquely map
(5) **chimeric.sam**     Reads that align to distinct positions in the genome with little to no overlap 
(6) **not_primary.sam**  Contains reads that are not primary alignments

The following FASTQ files are generated based on the SAM flags:

(1) **ambiguous.fq**  FASTQ file containing reads that map ambiguously to the reference
(2) **unmapped.fq**   FASTQ file containing reads that do not map to the reference

**A summary TSV file** containing the numbers of reads that fall into each of the above groups.
    ]]></help>
</tool>
